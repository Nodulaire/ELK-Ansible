---
# This playbook contains common plays that will be run on all nodes

- name: Configure ufw rules
  ufw: rule={{ item.rule }} port={{ item.port }}
  with_items:
    - { rule: 'allow', port: '{{ kibana_listenning_port }}' }
  notify:
    - restart ufw

#- name : Installing Elasticsearch repo GPG Key
#  apt_key: url=https://packages.elastic.co/GPG-KEY-elasticsearch state=present

#- name: Add Kibana repository
#  apt_repository: repo='deb http://packages.elastic.co/kibana/{{kibana_version}}/debian stable main' state=present

- name: Install Kibana
  apt:
    name=kibana
    state=present
    update_cache=true
    allow-unauthenticated=yes

- name: Configure kibana
  lineinfile:
     dest="{{kibana_cfg_file}}"
     line="{{item.line}}"
     insertafter="{{item.regexp}}"
     state=present
  with_items:
     - {regexp: '^# server.host',                  line: "server.host: {{kibana_host}}"}
     - {regexp: '^# server.port',                  line: "server.port: {{kibana_listenning_port}}"}
     - {regexp: '^# elasticsearch.url',            line: "elasticsearch.url: {{kibana_es_url}}"}
     - {regexp: '^# elasticsearch.preserveHost',   line: "elasticsearch.preserveHost: {{kibana_es_preservehost}}"}
     - {regexp: '^# kibana.index',                 line: "kibana.index: {{kibana_index}}"}
     - {regexp: '^# elasticsearch.ssl.verify',     line: "elasticsearch.ssl.verify: {{kibana_es_ssl_verify}}"}
     - {regexp: '^# elasticsearch.requestTimeout', line: "elasticsearch.requestTimeout: {{kibana_es_request_timeout}}"}
     - {regexp: '^# elasticsearch.shardTimeout',   line: "elasticsearch.shardTimeout: {{kibana_es_shard_timeout}}"}

- name: Start Kibana at startup
  #command: /bin/systemctl enable kibana.service
  service: name=kibana enabled=yes
  notify:
      - restart kibana
