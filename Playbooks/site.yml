---
# This playbook deploys the whole application stack in this site.
# Be attentive, each modification will have several impacts on the deployement

################### Common ####################
- name         : Apply common configurations to all nodes
  hosts        : production
  become       : yes
  become_method: sudo # run commands as sudo
  vars:
    ssh_port: 22
  roles:
    - common
    - java

################### Logstash ###################
- name         : Install logstash
  hosts        : production-logstash
  become       : yes
  become_method: sudo
  vars:
    # Logstash installation variables
    ## Wanted version number
    #logstash_version        : "2.3.3"
    logstash_apt_repo_url   : "deb https://packages.elastic.co/logstash/2.3/debian stable main"
    ## Absolute path to the installation folder
    logstash_base_dir       : "/opt/logstash/"
    ## Posix
    logstash_directory_owner: "root"
    logstash_directory_group: "root"
    # Relative path of the grok files in the git repo
    logstash_src_conf_path  : "roles/logstash/src/"

    # Restart option, if different you need to restart logstash manually
    logstash_start_stop     : "init.d"
    ## Directory structure
    logstash_install_dir    : "{{ logstash_base_dir }}"
    logstash_sources_dir    : "{{ logstash_base_dir }}/source"
    logstash_extra_dir      : "{{ logstash_base_dir }}/extra"
    logstash_etc_dir        : "/etc/logstash/" # TODO Check if still needed
    logstash_bin            : "{{ logstash_install_dir  }}/bin/logstash"
    logstash_agent_arg      : "agent -f"
    logstash_extra_arg      : ""
    logstash_start_cmd      : "{{ logstash_bin  }} {{ logstash_agent_arg  }} {{ logstash_extra_arg  }} {{ logstash_etc_dir  }}"

    # Logstash configuration variables
    logstash_listenning_port: 5014
    #logstash_local_log_dir  : '/var/log/syslog/logstash'

    # Elasticsearch host variables
    elasticsearch_ip_addr               : "{{ hostvars[groups['production-elasticsearch'][0]].ansible_default_ipv4.address }}"
  #  elasticsearch_ip_addr               : '10.0.5.99'
    elasticsearch_listenning_port       : 9200 # This must mach with the port on 'Install Elasticsearch'
  roles:
      - logstash

################ Elasticsearch #################
- name         : Install elasticsearch
  hosts        : production-elasticsearch
  become       : yes
  become_method: sudo
  vars:
    # Unix variables
    elasticsearch_user            : 'elasticsearch'
    elasticsearch_group           : 'elasticsearch'

    # Directory structure
    elasticsearch_home_dir        : '/usr/share/elasticsearch'
    elasticsearch_plugin_dir      : '/usr/share/elasticsearch/plugins'
    elasticsearch_log_dir         : '/var/log/elasticsearch'
    elasticsearch_data_dir        : '/data/elasticsearch'
    elasticsearch_work_dir        : '/tmp/elasticsearch'
    elasticsearch_conf_dir        : '/etc/elasticsearch'
    elastcisearch_conf_file       : "{{  elasticsearch_conf_dir }}/elasticsearch.yml"
    elasticsearch_pid_dir         : '/var/run'
    elastcisearch_cluster_name    :  "{{elasticsearch_data_dir}}/ELK-Cluster1"

    # Download link
    elasticsearch_apt_repo_url    : 'deb http://packages.elastic.co/elasticsearch/2.x/debian stable main'
    #elasticsearch_download_url    : "https://download.elastic.co/elasticsearch/release/org/elasticsearch/distribution/deb/elasticsearch/2.3.3/elasticsearch-2.3.3.deb"
    #elasticsearch_version         : "2.3.3"

    # Elasticsearch running variables
    elastcisearch_network_host    : "{{ hostvars[groups['production-elasticsearch'][0]].ansible_default_ipv4.address }}"
    elasticsearch_listenning_port : 9200
    elasticsearch_max_open_files  : 65535
  roles:
      - elasticsearch



##################### Kibana ####################
- name         : Install kibana
  hosts        : production-kibana
  become       : yes
  become_method: sudo
  vars:
    kibana_listenning_port              : 5601
    kibana_version                      : '4.5'
    kibana_cfg_file                     : '/opt/kibana/config/kibana.yml'
    kibana_host                         : "{{ hostvars[groups['production-kibana'][0]].ansible_default_ipv4.address }}"

    elasticsearch_ip_addr               : "{{ hostvars[groups['production-elasticsearch'][0]].ansible_default_ipv4.address }}"
    elasticsearch_listenning_port       : 9200 # This must mach with the port on 'Install Elasticsearch'
    kibana_es_url                       : "http://{{elasticsearch_ip_addr}}:{{elasticsearch_listenning_port}}"
    kibana_es_preservehost              : "true"
    kibana_es_ssl_verify                : "false"
    kibana_index                        : ".kibana"
    kibana_es_request_timeout           : 300000
    kibana_es_shard_timeout             : 0
  roles:
      - nginx
      - kibana


#################################################
################## SNORT PART ###################
#################################################

- name         : Install SNORT and dependencies
  hosts        : snort
  become       : yes
  become_method: sudo
  vars:
     # COMMON Variable
     - src_install_directory: "/root/snort_src/"

     # DAQ Variable
     - daq_version: "daq-2.0.6"
     - src_install_directory: "/root/snort_src/"
     - daq_install_directory: "/root/snort_src/{{daq_version}}"
     - url_install_daq: "https://www.snort.org/downloads/snort/{{daq_version}}.tar.gz"
     - daq_checksum: "md5:2cd6da422a72c129c685fc4bb848c24c"

     # SNORT Variable
     - snort_version: "snort-2.9.8.3"
     - snort_network_interface: "ens33"
     - snort_install_directory: "/root/snort_src/{{snort_version}}"
     - url_install_snort: "https://www.snort.org/downloads/snort/{{snort_version}}.tar.gz"
     - snort_path: "/etc/snort/"
     - snort_home_net: "192.168.1.0"
     - snort_external_net: "any"
     - snort_output: "output unified2 : filename merged.log, limit 128"
     - url_community_rules: "https://www.snort.org/rules/community"
     - url_registered_rules: "https://www.snort.org/rules/snortrules-snapshot-2983.tar.gz?oinkcode={{oinkcode}}"
     - snort_path_log: "/var/log/snort"
     - snort_binary: "/usr/sbin/snort"
     - snort_service_name: "snort"
     - snort_daemon: "/etc/init.d/snort"
     - snort_daemon_options: "-q -i {{snort_network_interface}} -l {{snort_path_log}} -c {{snort_path}}/snort.conf"
     - snort_daemon_user: "root"
     - snort_daemon_name: "snort"
     - u2json_binary: "/usr/local/bin/idstools-u2json"
     - u2json_service_name: "idstools-u2json"
     - u2json_daemon: "/etc/init.d/u2json"
     - u2json_daemon_options: "--snort-conf {{snort_path}}/snort.conf --directory {{snort_path_log}} --prefix merged.log --follow --output {{snort_path_log}}/alert.json"
     - u2json_daemon_user: "root"
     - u2json_daemon_name: "u2json"
  roles:
 #    - snort

################### PKI ####################
- name         : Install PKI
  hosts        : production-pki
  become       : yes
  become_method: sudo # run commands as sudo
  vars:
    - dir_pki: "/root/pki"
    - name_rootca: "RootCA"
    - name_intca: "IntCA"
    - name_infraca: "InfraCA"
    - name_clientca: "ClientCA"
    - name_client: "Client"

    ######### CA Root & Int ############

    - dir_crl: "{{dir_pki}}/crl"
    - dir_certs: "{{dir_pki}}/certs"
    - dir_ca: "{{dir_pki}}/ca"
    - dir_rootca: "{{dir_ca}}/{{name_rootca}}"
    - dir_intca: "{{dir_ca}}/{{name_intca}}"

    - dir_conf: "{{dir_pki}}/conf"
    - conf_rootca: "{{dir_conf}}/{{name_rootca}}.conf"
    - conf_intca: "{{dir_conf}}/{{name_intca}}.conf"

    - dir_rootca_priv: "{{dir_rootca}}/private"
    - dir_intca_priv: "{{dir_intca}}/private"

    - dir_rootca_db: "{{dir_rootca}}/db"
    - dir_intca_db: "{{dir_intca}}/db"

    - dir_rootca_certs: "{{dir_rootca}}/certs"
    - dir_intca_certs: "{{dir_intca}}/certs"

    - file_rootca_crt: "{{dir_rootca_db}}/{{name_rootca}}.crt.srl"
    - file_rootca_db: "{{dir_rootca_db}}/{{name_rootca}}.db"
    - file_rootca_dbattr: "{{dir_rootca_db}}/{{name_rootca}}.db.attr"
    - file_rootca_crl: "{{dir_rootca_db}}/{{name_rootca}}.crl.srl"

    - file_intca_crt: "{{dir_intca_db}}/{{name_intca}}.crt.srl"
    - file_intca_db: "{{dir_intca_db}}/{{name_intca}}.db"
    - file_intca_dbattr: "{{dir_intca_db}}/{{name_intca}}.db.attr"
    - file_intca_crl: "{{dir_intca_db}}/{{name_intca}}.crl.srl"

    ########### More CA ##############

    - dir_infraca: "{{dir_ca}}/{{name_infraca}}"
    - dir_clientca: "{{dir_ca}}/{{name_clientca}}"

    - conf_infraca: "{{dir_conf}}/{{name_infraca}}.conf"
    - conf_clientca: "{{dir_conf}}/{{name_clientca}}.conf"
    - conf_client: "{{dir_conf}}/{{name_client}}.conf"

    - dir_infraca_priv: "{{dir_infraca}}/private"
    - dir_clientca_priv: "{{dir_clientca}}/private"

    - dir_infraca_db: "{{dir_infraca}}/db"
    - dir_clientca_db: "{{dir_clientca}}/db"
    
    - dir_infraca_certs: "{{dir_infraca}}/certs"
    - dir_clientca_certs: "{{dir_clientca}}/certs"

    - file_infraca_crt: "{{dir_infraca_db}}/{{name_infraca}}.crt.srl"
    - file_infraca_db: "{{dir_infraca_db}}/{{name_infraca}}.db"
    - file_infraca_dbattr: "{{dir_infraca_db}}/{{name_infraca}}.db.attr"
    - file_infraca_crl: "{{dir_infraca_db}}/{{name_infraca}}.crl.srl"

    - file_clientca_crt: "{{dir_clientca_db}}/{{name_clientca}}.crt.srl"
    - file_clientca_db: "{{dir_clientca_db}}/{{name_clientca}}.db"
    - file_clientca_dbattr: "{{dir_clientca_db}}/{{name_clientca}}.db.attr"
    - file_clientca_crl: "{{dir_clientca_db}}/{{name_clientca}}.crl.srl"

  roles:
    - pki
