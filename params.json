{
  "name": "Elk-ansible",
  "tagline": "Opensource deployement and configuration of a monitoring stack",
  "body": "# ELK-Ansible\r\n\r\n## AIM \r\n\r\nMonitoring should be for everyone. Not only those with money or skills. Here we try to create a monitoring plateform, universal and easy to use. \r\n\r\nHere you are going to find :\r\n - ANSIBLE scripts (automatisation of the installation).\r\n - Logstash configuration files.\r\n - Elasticsearch configuration files.\r\n - Kibana dashboards (exemples purpose).\r\n - RSyslog configurations.\r\n - Plugins exemples for the log forwarding.\r\n\r\n\r\n## Architecture \r\n\r\n### Principe\r\n```\r\n      ELK Stack Master                                           Client(s)\r\n______________________________                        ______________________________   \r\n|                            |                        |                            |  \r\n|          KIBANA            |                        |          Web Logs          |  ___\r\n|____________________________|                        |____________________________|    |\r\n|                            |                        |                            |    |\r\n|        ElasticSearch       |                        |        Systems Logs        |  __|\r\n|____________________________|                        |____________________________|    |\r\n|                            |                        |                            |    |\r\n|         Logstash           |                        |        Kernel Logs         |  __|\r\n|____________________________|                        |____________________________|    |\r\n|                            |                        |                            |    |\r\n|       Syslog Master        |  <--Client(s) Logs--   |        Local Syslog        |  <-/\r\n|____________________________|         (TLS)          |____________________________|  \r\n```\r\n In our solution all the clients send their logs (via TLS) directly to he stack syslog or to a legacy syslog server. \r\n\r\n### Maquette installation \r\n\r\nThere is the infrastructure we use to test the product : \r\n\r\n![infra-maquette](https://github.com/Nodulaire/ELK-Ansible/blob/master/Documentation/Images/Maquette/infra-maquette.png)\r\n\r\n## Pro/Con\r\n\r\n### Pro \r\n\r\n- Agent less client configuration\r\n- All log in the syslog standardised format\r\n- No tierce software in the production servers\r\n- Lightweight\r\n- Compatible all Unix/Linux systems\r\n- Integrity granted (TLS)\r\n\r\n### Con\r\n- Limited to  the supported rsyslog format \r\n- Specific logs input may need custom groks\r\n\r\n### Hardware requirement\r\nFor this first version we are configuring the whole stack into a single (virtual) server. We will script multiple instance/cluster in a second time.\r\n\r\n\r\n- ELK Stack server\r\n      - OS  : Ubuntu Xenial 16.04 LTS\r\n      - RAM : 4Go\r\n      - CPU : 2\r\n      - Oth : SSH Root acess and [python 2.7](http://docs.ansible.com/ansible/faq.html#how-do-i-handle-python-pathing-not-having-a-python-2-x-in-usr-bin-python-on-a-remote-machine) (not installed by default) and an internet connection.  \r\n\r\n- Ansible server\r\n      - RAM : 128Mo or more\r\n      - OS  : Whatever who support SSH\r\n      - Oth : Python 2.7\r\n\r\n\r\n\r\n\r\n### TODO :\r\n- Provide a docker contener (far far away in the future)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}